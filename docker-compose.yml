version: "3.1"

services:
  db_2:
    container_name: database
    image: postgres:14
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    restart: always
    ports:
      - 5432:5432
    networks:
      - botnet
    volumes:
      - ./postgres:/var/lib/postgresql

  django_2:
    container_name: admin
    build:
      context: .
    command: >
      sh -c "python django_app.py runserver 0.0.0.0:8000 --noreload"
    ports:
      - 8000:8000
    networks:
      - botnet
    restart: always
    env_file:
      - ".env"
    depends_on:
      - db_2


  tgbot_2:
    container_name: bot
    build:
      context: .
    command: python app.py
    restart: always
    networks:
      - botnet
    env_file:
      - ".env"
    depends_on:
      - db_2
      - django_2
    volumes:
      - .:/src


  nginx_2:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./admin_panel/staticfiles:/src/admin_panel/staticfiles
      - ./admin_panel/media:/src/admin_panel/media
    depends_on:
      - django_2
    networks:
      - botnet



networks:
  botnet:
    driver: bridge